@using Microsoft.AspNetCore.Identity
@using QuizletClone.Areas.Identity.Data
@using QuizletClone.DTOs.Folder
@using QuizletClone.ViewModels.Folders
@model FolderDTO
@inject UserManager<AppUser> UserManager
@{
	ViewData["Title"] = $"Thư mục {Model.Title} | QuizletClone";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var btnState = @Model.CoursesInFolder?.Count > 1 ? "" : "inactive";
	var btnTitle = string.IsNullOrEmpty(btnState) ? "" : "Thêm 1 học phần để học";

	var isOwner = UserManager.GetUserId(User) == Model.Owner.Id;
	var hasPublicCourses = Model.CoursesInFolder.Any(c => isOwner || c.ViewPermissionType != PermissionType.OnlyMe);

	// Nếu user là chủ sở hữu (isOwner == true), đặt ID cho tiêu đề để có thể chỉnh sửa.
	// Nếu không, để trống để tiêu đề không thể click vào và đổi tên.
	var editableFolderTitleId = isOwner ? "folderTitle" : "";
}
@section Styles {
	<link rel="stylesheet" href="~/css/folder/detail.css" />
	<link rel="stylesheet" href="~/css/folder/confirmDeleteModal.css" />
	<link rel="stylesheet" href="~/css/folder/addCourseToFolderModal.css" />
	<link rel="stylesheet" href="~/css/userLibrary/searchBox.css" />
	<link rel="stylesheet" href="~/css/shared/btn-options.css" />
}

<div class="folder-detail-container">
	<header>
		<div class="header-content">
			<div class="folder-title" data-folder-id="@Model.Id">
				<h1 id="@editableFolderTitleId">@Model.Title</h1>
			</div>

			<!-- Hiển thị các action buttons -->
			@await Html.PartialAsync("/Views/Folders/ViewPartials/_ActionButtonsPartial.cshtml", new FolderActionButtonsViewModel{
				FolderId = Model.Id,
				IsOwner = isOwner,
				BtnState = btnState,
				BtnTitle = btnTitle,
			})
		</div>
		
		<!-- Hiển thị thời gian create/update -->
		@await Html.PartialAsync("/Views/Folders/ViewPartials/_FolderInfoPartial.cshtml", new FolderInfoViewModel
		{
			IsOwner = isOwner,
			CreatedAt = Model.CreatedAt,
			UpdatedAt = Model.UpdatedAt,
			OwnerUsername = Model.Owner.Username
		})

		@if (isOwner)
		{
			<!-- Modal xác nhận xóa folder -->
			@await Html.PartialAsync("/Views/Folders/Modals/ConfirmDeleteFolderModal.cshtml", new{
				Id = Model.Id
			})
		
			<!-- Modal thêm các học phần vào folder -->
			@await Html.PartialAsync("/Views/Folders/Modals/AddCourseToFolderModal.cshtml", new{
				CoursesAccessed = Model.CoursesAccessed,
				CurrUserId = Model.Owner.Id,
				FolderId = Model.Id
			})
		}
	</header>

	<div class="py-5">
		<!-- Filter và thanh tìm kiếm -->
		@if (hasPublicCourses)
		{
			<div class="filter-search-container">
				<div class="select-container">
					<div class="custom-select">
						<div class="selected" data-value="updated">
							Các mục gần đây
							<i class="fa-solid fa-angle-down"></i>
						</div>
						<div class="options">
							<div class="option" data-value="updated">Các mục gần đây</div>
							<div class="option" data-value="title">Tiêu đề</div>
						</div>
					</div>
				</div>

				<!--Thanh tìm kiếm-->
				@await Html.PartialAsync("../UserLibrary/Shared/_SearchBoxPartial.cshtml", new
					{
						title = "Tìm kiếm thư mục này",
						backgroundColor = "var(--bg-color-grey)"
					})
			</div>
		}

		<!-- Courses in folder -->
		@await Html.PartialAsync("/Views/Folders/ViewPartials/_CourseInFolderPartial.cshtml", new CourseFolderViewModel
		{
			FolderId = Model.Id,
			IsOwner = isOwner,
			HasPublicCourses = hasPublicCourses,
			Courses = Model.CoursesInFolder.Select(c => new CourseInFolderViewModel{
				Id = c.Id,
				Title = c.Title, 
				Slug = c.Slug,
				OwnerUsername = c.OwnerUsername,
				OwnerUserId = c.OwnerUserId,
				FlashcardCount = c.FlashcardCount,
				UpdatedAt = c.UpdatedAt.ToString("yyyy/MM/dd HH:mm:ss"),
				ViewPermissionType = c.ViewPermissionType
			}).ToList()
		})
	</div>
</div>

<script type="module" src="~/js/folder/main.js"></script>