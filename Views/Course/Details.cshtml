@using SmartCards.DTOs.Course
@model CourseDTO
@{
    ViewData["Title"] = $"Thẻ ghi nhớ: {Model.Title} | SmartCards";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Lấy ra vị trí của thẻ đã học gần nhất trong danh sách flashcards, nếu k có gán = 0
    var lastLearnedFcIndex = 0;
    if (Model.LastLearnedFlashcard != null && Model.Flashcards.Any(x => x.Id == Model.LastLearnedFlashcard.Id))
        lastLearnedFcIndex = Model.Flashcards.FindIndex(x => x.Id == Model.LastLearnedFlashcard.Id);

    // Kiểm tra các flashcard đã học có được gắn sao hết hay không
    var areLearnedStarred = Model.LearnedFlashcards?.All(x => x.IsStarred);     

    // Kiểm tra các flashcard chưa học có được gắn sao hết hay không
    var areNotLearnedAreStarred = Model.NotLearnedFlashcards?.All(x => x.IsStarred);
}
@section Styles {
    <link rel="stylesheet" href="~/css/course/details.css" />
}

<div class="container detail-course-container">
    @* @if (Model.CourseFolder != null) // Có ở trong 1 folder nào đó thì mới hiển thị
    {
        <button class="btn-folder text-secondary mt-2"><i class="fa-regular fa-folder"></i> 
            @Model.CourseFolder.Folder.Title
        </button>
    } *@

    <div class="row">
        <h2 class="mt-3" style="font-weight: 800;">@Model.Title</h2>
    </div>

    <!-- Có user khác rate thì mới hiển thị -->
    @* <div class="rate mb-2">
         <i class="fa-solid fa-star"></i>
         <span>5.0 (1 đánh giá)</span> 
    </div> *@

    <div class="row">
        <!-- Study Modes -->
        @await Html.PartialAsync("ViewPartials/Details/_StudyModesPartial.cshtml")

        <!-- Term Definition Cards -->
        <div class="flashcards-container" id="flashcards-container"
             data-curr-index-card="@lastLearnedFcIndex"
             data-starred-card-count="@Model.StarredFlashcardCount">
            @await Html.PartialAsync("ViewPartials/Details/_FlashcardsPartial.cshtml", new {
                Flashcards = Model.Flashcards,
                StarredCardCount = Model.StarredFlashcardCount,
                CourseId = Model.Id,
                IsShuffle = Model.IsShuffle
            })
        </div>

        <!-- Congratulation complete course -->
        @await Html.PartialAsync("ViewPartials/Details/_CongratulationPartial.cshtml")
    </div>

    <!-- User Info, Action Bar-->
    @await Html.PartialAsync("ViewPartials/Details/_UserInfoActionBarPartial.cshtml", new {
        OwnerUsername = Model.OwnerUsername,
        RelativeTime = Model.RelativeTime
    })

    <!-- Your terms -->
    @await Html.PartialAsync("ViewPartials/Details/_YourTermsPartial.cshtml", new
    {
        Flashcards = Model.Flashcards,
        LearnedFlashcards = Model.LearnedFlashcards,
        NotLearnedFlashcards = Model.NotLearnedFlashcards,
        AreLearnedStarred = areLearnedStarred,
        AreNotLearnedStarred = areNotLearnedAreStarred
    })
</div>

<script type="module" src="~/js/course/detail/main.js"></script>
@* <script src="~/js/course/detail.js"></script> *@
